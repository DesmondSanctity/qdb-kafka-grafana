services:
  app1:
    container_name: app-producer
    build:
      context: ./
      dockerfile: ./app-producer/Dockerfile
    ports:
      - "8080:3001"
    env_file:
      - ./.env
    depends_on:
      - kafka

  app2:
    container_name: app-consumer
    build:
      context: ./
      dockerfile: ./app-consumer/Dockerfile
    ports:
      - "8081:3002"
    env_file:
      - ./.env
    depends_on:
      - kafka

  questdb:
    image: questdb/questdb:8.1.0
    container_name: questdb
    ports:
      - "9000:9000"
      - "8812:8812"
    environment:
      - QDB_PG_READONLY_USER_ENABLED=true

  grafana:
    image: grafana/grafana-oss:11.1.3
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - questdb

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

networks:
  default:
    name: qdb-kafka-grafana-network

